name: df build

on:
  workflow_dispatch:
  push:
    tags:
    - 'v*'

jobs:
  build:
    name: Build scan CVE & push
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: QEMU setup
      uses: docker/setup-qemu-action@v3
    - name: Buildx setup
      uses: docker/setup-buildx-action@v3
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Docker metadata definitions
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ vars.DOCKERHUB_USERNAME }}/lab10
        flavor: latest=false
        tags: |
          type=sha,prefix=sha-,format=short,priority=100
          type=semver,priority=200,pattern={{version}}
    - name: Build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64, linux/arm64
        push: false
        cache-from: type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/lab10:cache
        cache-to: type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/lab10:cache,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        outputs: type=oci,dest=/tmp/image.tar
    - name: Trivy CVE scan
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: /tmp/image.tar
        scan-type: fs
        ignore-unfixed: true
        severity: CRITICAL,HIGH
        exit-code: 1
        format: table
        vuln-type: os,library
    - name: Push image to GHCR
      if: success()
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        cache-from: type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/lab10:cache
        cache-to: type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/lab10:cache,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        
